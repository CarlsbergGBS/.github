# This is a basic workflow that is manually triggered

name: ⚙️🏛️⚗️ Manual/Automated TF workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      env:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'version to deploy'
        # Default value if no value is explicitly provided
        default: 'latest'
        # Input has to be provided for the workflow to run
        required: true

env:
  organization: cb
  appname: cbappname
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  tf-install-validate-checkov:
    name: ☢️ Tf Install validate, Fmt and Sec scan
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
     # - uses: actions/checkout@v2
    
      - name: 📤 Checkout repository & submodules
        uses: actions/checkout@v2.3.1
        
      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Debug
        run: echo ${{ env.BRANCH_NAME }}

      
      - name: Install Terraform
        # You may pin to the exact commit or the version.
        # uses: little-core-labs/install-terraform@1e577535d279f1999a5abf60337ddc3ff225e79d
        uses: little-core-labs/install-terraform@v2.0.0
        with:
          # Version of terraform to download
          version: 0.12.9

      - name: ☑️ terraform-validate
        # You may pin to the exact commit or the version.
        # uses: dflook/terraform-validate@ae1bdb703064ad29842938c230cbb2bfecd155e2
        uses: dflook/terraform-validate@v1.4.1
        with:
          # Path to the terraform configuration
          path: .
     
      - name: ☢️ Security - Checkov Github Action
        # You may pin to the exact commit or the version.
        # uses: bridgecrewio/checkov-action@5c6375613e29384c477e33a6bfd36a351dde805d
        uses: bridgecrewio/checkov-action@v13
        id: checkov
        with:
          # directory with infrastructure code to scan
          directory: . # optional, default is .
          # Run scan only on a specific check identifier (comma separated)
          #check: # optional
          # Run scan on all checks but a specific check identifier (comma separated)
          #skip_check: # optional
          # display only failed checks
          #quiet: # optional
        continue-on-error: true
      
      - name: 🚿 terraform-fmt
        # You may pin to the exact commit or the version.
        # uses: dflook/terraform-fmt@80e2fe31f8db99ea0e0e907478e6ce05a99af809
        uses: dflook/terraform-fmt@v1.4.1
        with:
          # Path to the terraform configuration
          path: .
     

  generate-docs:
    name: 📘 Generate Docs
    needs: [ tf-install-validate-checkov]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
     
      - name: 📤 Checkout repository & submodules
        uses: actions/checkout@v2.3.1
       
     
      - name: 📘 terraform-docs
        # You may pin to the exact commit or the version.
        # uses: Dirrk/terraform-docs@26b70436ceceba0a62c6b083d67c0796ea89bdeb
        uses: Dirrk/terraform-docs@v1.0.8
        with:
          # Directories of terraform modules to generate docs for seperated by commas (conflicts with atlantis/find dirs)
          tf_docs_working_dir: . # optional, default is .
          # Generate directories by parsing an atlantis formatted yaml to enable provide the file name to parse (eg atlantis.yaml)
          #tf_docs_atlantis_file: disabled # optional, default is disabled
          # Generate directories by running find ./tf_docs_find_dir -name *.tf
          #tf_docs_find_dir: # optional, default is disabled
          # File in module directory where the docs should be placed
          tf_docs_output_file:  README.md # optional, default is USAGE.md
          # Generate document or table
          tf_docs_content_type: table # optional, default is table
          # Indention level of Markdown sections [1, 2, 3, 4, 5]
          tf_docs_indention: 2 # optional, default is 2
          # Additional args to pass to the command see https://github.com/segmentio/terraform-docs/tree/master/docs
          #tf_docs_args: # optional, default is 
          # Method should be one of (replace/inject/print) where replace will replace the tf_docs_output_file, inject will inject the content between start and close delims and print will just print the output
          tf_docs_output_method: replace # optional, default is inject
          # If true it will commit and push the changes
          tf_docs_git_push: true # optional, default is false
          # Commit message
          tf_docs_git_commit_message: automated by github actions # optional, default is terraform-docs: automated action
          # When provided will be used as the template if/when the OUTPUT_FILE does not exist
          #tf_docs_template: # optional, default is # Usage     
      
      

  teams-notification:
    # The type of runner that the job will run on
      name: 👨‍👩‍👧‍👦👨‍👩‍👧‍👦👨‍👩‍👧‍👦 Notify on teams
      runs-on: ubuntu-latest
      needs: [generate-docs]
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        - name: 👨‍👩‍👧‍👦👨‍👩‍👧‍👦👨‍👩‍👧‍👦 Notify dedicated teams channel
          uses: jdcargile/ms-teams-notification@v1.2
          with:
            github-token:  ${{ secrets.TOKEN }} # this will use the runner's token.
            ms-teams-webhook-uri: ${{ secrets._TEAMS_URI_GITHUB }}
            notification-summary: "New infra version available 🏛️ -> ${{env.appname}}  📦 &#x1F680​​ &#x2705;" 
            notification-color: 17a2b8
            timezone: America/Denver
