# This is a basic workflow that is manually triggered

name: Export Issues as readme.md

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      pat:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'PAT'
        # Default value if no value is explicitly provided
        default: 'XXXXXXXXXXXXXXXXXXXXXX'
        # Input has to be provided for the workflow to run
        required: true
      repourl:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'repo'
        # Default value if no value is explicitly provided
        default: '$GITHUB_REPOSITORY'
        # Input has to be provided for the workflow to run
        required: true
      targetfilename:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'target issues file name'
        # Default value if no value is explicitly provided
        default: 'issues.md'
        # Input has to be provided for the workflow to run
        required: false
       

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    - name: Backup github issues to a markdown file.
      run: |
        pip3 install --user --upgrade setuptools
        pip3 install --user gh2md
        $HOME/.local/bin/gh2md  ${{ github.event.inputs.repourl }}  ${{ github.event.inputs.targetfilename }} --idempotent
        git add ${{ github.event.inputs.targetfilename }}
      env:
        GITHUB_ACCESS_TOKEN:  ${{ github.event.inputs.pat }} #${{ secrets.TOKEN }}
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git diff --quiet && git diff --staged --quiet || git commit -am "Backup all issues into  ${{ github.event.inputs.targetfilename }}"
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token:  ${{ github.event.inputs.pat }} #${{ secrets.TOKEN }}
        branch: ${{ steps.extract_branch.outputs.branch }}
       
